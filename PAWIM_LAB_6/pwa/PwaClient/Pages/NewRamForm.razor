@page "/rams/create"
@inject HttpClient HttpClient

<h1>New Ram</h1>

@if (isFormSubmitted)
{
    <p>Success</p>
    <a class="btn btn-success" href="/rams">Go back</a>
}
else
{
    <form @onsubmit="SubmitForm">
    <div class="mb-3">
        <label class="form-label" for="name">Name</label>
        <input class="form-control" id="name" @bind="ramForm.Name" type="text">
    </div>
    <div class="mb-3">
        <label class="form-label" for="ramCapacity">RAM Capacity [GB]</label>
        <input class="form-control" id="ramCapacity" @bind="ramForm.RamCapacity" type="text">
    </div>
    <div class="mb-3">
        <label class="form-label" for="memoryRate">Memory Rate [MHz]</label>
        <input class="form-control" id="memoryRate" @bind="ramForm.MemoryRate" type="text">
    </div>
        <div class="d-flex justify-content-end">
            <a class="btn btn-secondary" href="/rams">Cancel</a>
            <button class="btn btn-primary ms-3" type="submit">Submit</button>
        </div>
    </form>
}

@code {
    private RamForm ramForm = new RamForm();
    private bool isFormSubmitted = false;

    private async Task SubmitForm()
    {

        var ram = new Ram(
            ramForm.Name,
            ramForm.RamCapacity,
            ramForm.MemoryRate
            );
        await HttpClient.PostAsJsonAsync(Constants.RamsUrl, ram);
        isFormSubmitted = true;
    }
}